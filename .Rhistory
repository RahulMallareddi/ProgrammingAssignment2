swirl()
library(swirl)
swirl()
TRue==TRUE
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!5==7
FALSE&FALSE
TRUR&c(TRUE,FALSE,FALSE)
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5
| == 6, !FALSE)
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
 evaluate(function(x){x+1}, 6)
 evaluate(function(x){x[1]}, c(8,4,0))
 evaluate(function(x){x[3]}, c(8,4,0))
 evaluate(function(x){x[-1]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
telegram("Enjoying the Swirl")
submit()
submit()
mad_libs(place="colorado",adjective="Cafe",noun="Tina")
submit()
"I"%p%"love"%p%'R!'
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-POSIX1t(Sys.time())
t2<-POSIXIt(Sys.time())
t2<-as.POSIX1t(Sys.time())
t2<-as.POSIXIt(Sys.time())
t2<-as.POSIXt(Sys.time())
t2<-as.POSIX1t(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
ts$min
t2$min
weekdays(d1)
months(t1)
quaters(t1)
quarters(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
exit()
quit()
setwd("D:/R Programming/ProgrammingAssignment2")
source("cachematrix.R")
x<-matrix(1:9,3,3)
y<-makeCacheMatrix(x)
cacheSolve(y)
cacheSolve(x)
x
source("cachematrix.R")
x<-matrix(1:9,3,3)
y<-makeCacheMatrix(x)
cacheSolve(y)
m <- matrix(rnorm(16),4,4)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
save.image("D:\\R Programming\\ProgrammingAssignment2\\InvMatrix")
q()
